function plotter_boundness
    
    close all;

    % Create figure
    figure1 = figure('InvertHardcopy','off','Color',[1 1 1], ...
        'position', [680 0 600 570]);
    set(figure1,'PaperUnits','centimeters');
    xSize = 8; ySize = 12;
    xLeft = (21-xSize)/2; yTop = (30-ySize)/2;
    %set(figure1,'PaperPosition',[xLeft yTop xSize ySize]);
    %set(figure1,'Position',[X Y xSize*50 ySize*50]);

    hold on
    %axis([-1.7 1.7 -1.7 1.7]);
    %axis([-2 2 -2 2]);
    axis([-2.5 2.5 -2.5 2.5]);
    
    plot([-1 0], [0 -1], 'color', 'k', 'LineWidth', 3);
    plot([0 1], [1 0], 'color', 'k', 'LineWidth', 3);

    %plot([-1 0], [0 1], 'color', 'k', 'LineWidth', 3);
    %plot([0 1], [-1 0], 'color', 'k', 'LineWidth', 3);


    % Дополнительные границы
    ax=axis;
    plot(ax(1:2), [ax(4) ax(4)], 'k', 'LineWidth', 1);
    plot([ax(2) ax(2)], ax(3:4), 'k', 'LineWidth', 1);

    % Экспериментальные данные для бесконечно большого числа нейронов.
    % tau = 0.5
    a = [ -1.08 -1.00 -0.80 -0.60 -0.40 -0.2 0 ];
    b = [  1.08  1.15  1.3   1.38  1.36  1.2 1 ];
    interp(a, b, true, 'k');
    
    
    number = 12 ;
    N = 181;
    PI = 2*pi;
    %[r phi taus] = solver_boundness_smart(number, .5, .0001);
    phi = 0 : PI/N: PI;
    [r taus] = solver_boundness(number, .5, phi, .0001);
    title(['n = ' num2str(number)],'FontSize',16);
    excludePoints(144) ;
    excludePoints(146) ;
    
    h = polar(phi, r, '-o');
    %set(h, 'LineWidth', 3) ;
    
    % display debug data
    debug = 0;
    if debug
        str = cell(size(taus));
        if debug == 1
            for j=1:length(taus)
                str{j} = num2str(j-1);
            end
        elseif debug == 2
            for j=1:length(taus)
                str{j} = [num2str(j-1) ':' num2str(phi(j)*180/pi, 3) arr2str(taus{j}) num2str(r(j),2)];
            end
        end
        r = r+0.2;
        text(r.*cos(phi), r.*sin(phi), str);
    end
    
    grid; 

    function excludePoints (n)
        r (n) = (r(n-1) + r(n+1))/2 ;
    end
    
    % Функция интерполирует экспериментальные данные
    function interp(a, b, sim, color, titleString)
        x = a(1):.001:a(end);
        y = interp1(a, b, x, 'spline' );

        if sim
            xx = [-y(end:-1:2) x];
            yy = [-x(end:-1:2) y];
        else 
            xx = x;
            yy = y;
        end

        plot(xx, yy, color, 'LineWidth', 3);
        plot(-xx, -yy, color, 'LineWidth', 3);

        aa = [a -b(end:-1:2)];
        bb = [b -a(end:-1:2)];
        %plot(aa, bb, 'ok', xx, yy, color, 'LineWidth', 1);
        %plot(-aa, -bb, 'ok', -xx, -yy, color, 'LineWidth', 1);
        if exist('titleString', 'var') 
            title(['n = ' num2str(titleString)],'FontSize',16);
        end
    end

% Autogenerated code.
% Create xlabel
xlabel({'a'}, 'FontSize',16);

% Create ylabel
ylabel({'b'}, 'FontSize',16);

% Create textbox
annotation(figure1,'textbox',[0.416071428571428 0.402380952380954 0.2 0.2],...
    'String','Stability',...
    'FontSize',16,...
    'FitBoxToText','off',...
    'LineStyle','none',...
    'EdgeColor',[1 1 1]);

% Create textbox
annotation(figure1,'textbox',...
    [0.19904017857143 0.254566473988439 0.133459821428571 0.0708202587393341],...
    'String',{'Instability'},...
    'FontSize',16,...
    'FitBoxToText','off',...
    'LineStyle','none',...
    'EdgeColor',[1 1 1]);

% Create textbox
annotation(figure1,'textbox',...
    [0.654821428571429 0.783236994219653 0.133459821428571 0.0708202587393341],...
    'String',{'Instability'},...
    'FontSize',16,...
    'FitBoxToText','off',...
    'LineStyle','none',...
    'EdgeColor',[1 1 1]);

% Create textbox
% annotation(figure1,'textbox',...
%     [0.261830357142862 0.733346957238293 0.0430133928571401 0.0446380401871719],...
%     'String',{'\tau=0.5'},...
%     'FontSize',16,...
%     'FitBoxToText','off',...
%     'LineStyle','none',...
%     'EdgeColor',[1 1 1]);

% Create textbox
% annotation(figure1,'textbox',...
%     [0.700424107142862 0.28389837303561 0.0430133928571401 0.0446380401871719],...
%     'String',{'\tau=0.5'},...
%     'FontSize',16,...
%     'FitBoxToText','off',...
%     'LineStyle','none',...
%     'EdgeColor',[1 1 1]);


% Create textbox
% annotation(figure1,'textbox',[0.416071428571428 0.402380952380954 0.2 0.2],...
%     'String',{'delay','independent','stability'},...
%     'FontSize',16,...
%     'FitBoxToText','off',...
%     'LineStyle','none',...
%     'EdgeColor',[1 1 1]);

end

