function [minX, maxX, figure1] = transition_plotter_boundness(type, tau, number, c, epsilon, dir, ext, minX, maxX, figure1)
    addpath ../common
    %close all;

    % Create figure
    if (exist('figure1', 'var') == false)
        figure1 = figure('InvertHardcopy','off','Color',[1 1 1], ...
            'position', [680 0 600 570]);
    end
    hold on;
    grid on;


    
    [phi, r] = transition_solver_boundness_smart(type, tau, number, c, epsilon);
    polar(phi, r, 'o');
    
    %title(['$\tau = ' num2str(tau) ', n = ' num2str(number) '$' ],'FontSize',20, 'interpreter', 'latex');
    
    %title(['$c$ = ' num2str(c) ],'FontSize',20, 'interpreter', 'latex');

    
% Autogenerated code.
% Create xlabel
xlabel({'a'}, 'FontSize',16);

% Create ylabel
ylabel({'b'}, 'FontSize',16);


text('Interpreter','latex',...
 'String',['$$ \gamma = $$' num2str(c)],...
 'Position',[r(1)+.3 0],...
 'FontSize',18)

% Create textbox
annotation('textbox',...
    [0.43 0.48 0.13 0.0847826086956548],...
    'String','Stability',...
    'FontSize',16,...
    'FitBoxToText','off',...
    'LineStyle','none',...
    'EdgeColor',[1 1 1]);

% Create textbox
annotation('textbox',...
    [0.19904017857143 0.254566473988439 0.133459821428571 0.0708202587393341],...
    'String',{'Instability'},...
    'FontSize',16,...
    'FitBoxToText','off',...
    'LineStyle','none',...
    'EdgeColor',[1 1 1]);

% Create textbox
annotation('textbox',...
    [0.654821428571429 0.783236994219653 0.133459821428571 0.0708202587393341],...
    'String',{'Instability'},...
    'FontSize',16,...
    'FitBoxToText','off',...
    'LineStyle','none',...
    'EdgeColor',[1 1 1]);


    % Scaling
    ax=axis;
    x1=min(ax(1), ax(3));
    x2=max(ax(2), ax(4));
    if exist('minX', 'var')
        x1=minX;
    end
    if exist('maxX', 'var')
        x2=maxX;
    end
    minX = x1;
    maxX = x2;
    axis([x1-.5 x2+.5 x1-.5 x2+.5]);

    % Boundness
    ax=axis;
    plot(ax(1:2), [ax(4) ax(4)], 'k', 'LineWidth', 1);
    plot([ax(2) ax(2)], ax(3:4), 'k', 'LineWidth', 1);
    %axis([x1 x2 x1 x2+.01]);
    axis([x1-.5 x2+.5 x1-.5 x2+.51]);

%     if type == 1
%         typeName = 'asym';
%     else
%         typeName = 'sym';
%     end
%     
%     strTau = num2str(tau);
%     if length(strTau) < 3
%         strTau = [strTau '_0'];
%     end
%     strC = num2str(c);
%     if length(strC) < 3
%         strC = [strC '_0'];
%     end
%     
%     %mkdir(dir);
%     figureName = [typeName '-' strTau '-' num2str(number) '-' num2str(strC)];
%     
%     % replace decimal point 
%     figureName = strrep(figureName, '.', '_');
%     
%     set(figure1, 'PaperPositionMode', 'auto')   % Use screen size
%     
%     if strcmp(ext, 'png')
%         saveas(figure1, [dir filesep figureName '.png'], 'png');
%     else
%         saveas(figure1, [dir filesep figureName '.eps'], 'psc2');
%     end
%     
%     
%     %close;



end

